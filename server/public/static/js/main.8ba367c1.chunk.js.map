{"version":3,"sources":["Components/SearchBar/index.js","Components/BookTable/index.js","Pages/App/index.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","display","alignItems","minWidth","input","marginLeft","flex","searchIcon","marginRight","SearchBar","query","handleChange","classes","Grid","container","direction","justify","Paper","component","className","InputBase","placeholder","inputProps","onChange","value","table","header","backgroundColor","color","fontWeight","textTransform","BookTable","data","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","map","book","title","authors","join","genres","pages","rating","id","searchEndpoint","window","location","protocol","host","flexGrow","paper","textAlign","palette","text","secondary","search","magrinTop","books","App","React","useState","setQuery","setBooks","fetchBooks","a","limit","offset","fetch","then","response","json","catch","error","useEffect","CssBaseline","Container","maxWidth","item","xs","Typography","align","variant","colorprimary","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ba367c1.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(1),\n    // marginTop: theme.spacing(10),\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 600,\n  },\n  input: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n  }\n}));\n\nconst SearchBar = ({ query, handleChange }) => {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\n      <Paper component=\"form\" className={classes.root}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search Books\"\n          inputProps={{ 'aria-label': 'search books' }}\n          onChange={handleChange}\n          value={query}\n        />\n        <SearchIcon className={classes.searchIcon}/>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport default SearchBar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  header: {\n    backgroundColor: '#333333',\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n  },\n});\n\n\nexport default function BookTable({ data }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead className={classes.header}>\n          <TableRow>\n            <TableCell className={classes.header} >Title</TableCell>\n            <TableCell className={classes.header} >Authors</TableCell>\n            <TableCell className={classes.header} >Genres</TableCell>\n            <TableCell className={classes.header} >Pages</TableCell>\n            <TableCell className={classes.header} >Rating</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((book) => (\n            <TableRow key={book.id}>\n              <TableCell> {book.title} </TableCell>\n              <TableCell> {book.authors.join(', ')} </TableCell>\n              <TableCell> {book.genres.join(', ')} </TableCell>\n              <TableCell> {book.pages} </TableCell>\n              <TableCell> ðŸŒŸ {book.rating} </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport SearchBar from '../../Components/SearchBar'\nimport BooksTable from '../../Components/BookTable';\n\nlet searchEndpoint = '/api/v1/books';\nif (process.env.NODE_ENV !== 'production') {\n  searchEndpoint = 'http://localhost:8000/api/v1/books'\n} else {\n  searchEndpoint = `${window.location.protocol}//${window.location.host}/api/v1/books`\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  search: {\n    magrinTop: theme.spacing(5),\n  },\n  books: {\n    magrinTop: theme.spacing(5),\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState('');\n  const [book, setBooks] = React.useState([]);\n\n  const handleSearchChange = function(event) {\n    setQuery(event.target.value)\n    fetchBooks(query)\n  }\n\n  const fetchBooks = async (query, limit=15, offset=0) => {\n    return await fetch(`${searchEndpoint}?query=${query}&limit=${limit}&offset=${offset}`)\n      .then(response => response.json())\n      .then(data => {\n        setBooks(data);\n      })\n      .catch(error => {\n        setBooks([])\n      })\n  };\n\n  useEffect(() => { fetchBooks(query, 15, 0) }, [query, 15, 0]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        \n        <Grid container spacing={6} direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}>\n            <Typography align=\"center\" variant=\"h3\" component=\"h3\" colorprimary >Books</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <SearchBar\n              query={query}\n              handleChange={handleSearchChange}\n              className={classes.search}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <BooksTable className={classes.books} data={book}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}